group = "com.raoulsson.ssid_resolver_flutter"
version = "0.0.1"

buildscript {
    ext.kotlin_version = "1.9.0"
    repositories {
        google()
        mavenCentral()
        maven { url 'https://storage.googleapis.com/download.flutter.io' }
        maven { url 'https://artifact.bytedance.com/repository/Volcengine/' }
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.1.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://storage.googleapis.com/download.flutter.io' }
        maven { url 'https://artifact.bytedance.com/repository/Volcengine/' }
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

// Get Flutter SDK path from local.properties
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterSdkPath = localProperties.getProperty('flutter.sdk')
if (flutterSdkPath == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

android {
    namespace = "com.raoulsson.ssid_resolver_flutter"
    compileSdk = 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs += ["-Xskip-metadata-version-check"]
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        // Update minSdk to 21 to meet the API requirements
        minSdk = 21
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError = false
    }

    dependencies {
        compileOnly files("$flutterSdkPath/bin/cache/artifacts/engine/android-arm64/flutter.jar")
        testImplementation files("$flutterSdkPath/bin/cache/artifacts/engine/android-arm64/flutter.jar")

        implementation "androidx.core:core-ktx:1.12.0"
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"

        testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
        testImplementation "org.mockito:mockito-core:5.0.0"
        testImplementation "org.mockito.kotlin:mockito-kotlin:5.0.0"
        testImplementation "junit:junit:4.13.2"

        androidTestImplementation "androidx.test.ext:junit:1.2.0"
        androidTestImplementation "androidx.test.espresso:espresso-core:3.6.0"
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
        }
    }
}